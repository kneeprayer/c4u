version: '2'
services:
  nginx:
    container_name: nginx
    image: nginx:1.11.1-alpine
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    #links:
    #  - web
    #  - phpmyadmin
    depends_on:
      - web
    networks:
      - app_net
    #dns:
    #  - 8.8.8.8
    #  - 8.8.4.4
  web:
    build:
      context: ./rails
      dockerfile: Dockerfile
    environment:
      MYAPP_DATABASE_USERNAME: $MYAPP_DATABASE_USERNAME
      MYAPP_DATABASE_PASSWORD: $MYAPP_DATABASE_PASSWORD
      MYAPP_DATABASE_HOSTNAME: $MYAPP_DATABASE_HOSTNAME
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    #volumes:
    #  - ./rails/src:/myapp
    #ports:
    #  - "3000:3000"
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    networks:
      app_net:
        aliases:
          - app-loadbalance

  redis:
    container_name: redis
    image: redis:3.2.6-alpine
    networks:
      - app_net
  db:
    container_name: db
    image: mysql
    environment:
      MYSQL_USER: $MYAPP_DATABASE_USERNAME
      MYSQL_PASSWORD: $MYAPP_DATABASE_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYAPP_DATABASE_PASSWORD
      MYSQL_DATABASE: $MYAPP_DATABASE_DEV
      #MYSQL_DATABASE: $MYAPP_DATABASE_TEST
      #MYSQL_DATABASE: $MYAPP_DATABASE_PROD
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
    networks:
      - app_net

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8080:80
    links:
      - db
    environment:
     - PMA_ARBITRARY=1
    restart: always
    networks:
      - app_net

volumes:
  db-data:
    driver: local

networks:
  app_net: {}