version: '2'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    environment:
      RAILS_SERVE_STATIC_FILES: 'true'
      MYAPP_SECRET_KEY_BASE: $MYAPP_SECRET_KEY_BASE
      MYAPP_DATABASE_USERNAME: app
      MYAPP_DATABASE_PASSWORD: $MYAPP_DATABASE_PASSWORD
      MYAPP_DATABASE_HOST: db
      #MYAPP_SLACK_API_TOKEN: $MYAPP_SLACK_API_TOKEN
    ## See https://docs.docker.com/engine/admin/logging/awslogs/
    ##     https://wdullaer.com/blog/2016/02/28/pass-credentials-to-the-awslogs-docker-logging-driver-on-ubuntu/
    ## AWS User Creation
    ## {
    ##   "Version": "2012-10-17",
    ##   "Statement": [
    ##     {
    ##       "Action": [
    ##         "logs:CreateLogStream",
    ##         "logs:PutLogEvents"
    ##       ],
    ##       "Effect": "Allow",
    ##       "Resource": "*"
    ##     }
    ##   ]
    ## }
    #logging:
    #  driver: awslogs
    #  options:
    #    awslogs-region: "ap-northeast-1"
    #    awslogs-group: "my-group"
    #    awslogs-stream: "my-stream"
  web:
    extends:
      service: app
    command: bundle exec puma -C config/puma.rb
    links:
      - db
      - redis
  worker:
    extends:
      service: app
    command: bundle exec sidekiq -q notification
    links:
      - db
      - redis

  nginx:
    build: ./nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    links:
      - web
    #logging:
    #  driver: awslogs
    #  options:
    #    awslogs-region: "ap-northeast-1"
    #    awslogs-group: "my-group"
    #    awslogs-stream: "my-stream"

  db:
    image: mysql
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYAPP_DATABASE_PASSWORD
      MYSQL_DATABASE: myapp_production
      MYSQL_USER: driver
      MYSQL_PASSWORD: $MYAPP_DATABASE_PASSWORD
    #logging:
    #  driver: awslogs
    #  options:
    #    awslogs-region: "ap-northeast-1"
    #    awslogs-group: "my-group"
    #    awslogs-stream: "my-stream"

  redis:
    image: redis
    #logging:
    #  driver: awslogs
    #  options:
    #    awslogs-region: "ap-northeast-1"
    #    awslogs-group: "my-group"
    #    awslogs-stream: "my-stream"

volumes:
  db-data:
    driver: local